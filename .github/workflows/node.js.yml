# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.20.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Initialize CI
      working-directory: ./toff_frontend
      run: npm ci
    - name: Build frontend
      working-directory: ./toff_frontend
      run: npm run build
    - name: Run Frontend Tests
      working-directory: ./toff_frontend
      run: npm test
    - name: Initialize Backend
      working-directory: ./toff_backend
      run: npm ci
  deploy:
    runs-on: self-hosted
    needs: build # this job depends on "test" having finished
    if: github.ref == 'refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to Test Server
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ./toff_portfolio/
            git pull # we pull any changes from git
            cd ./toff_frontend/
            npm install # we install any missing dependencies
            npm run build # we build our app
            cd ../toff_backend/
            npm install
            pm2 reload all # we reload the app via PM2
